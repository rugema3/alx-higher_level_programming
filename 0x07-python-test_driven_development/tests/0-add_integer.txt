$ python3

>>> add_integer = __import__('0-add_integer').add_integer

# Testing positive integers
>>> add_integer(1, 2)
3

# Testing positive and negative integers
>>> add_integer(100, -2)
98

# Tesing floats and integers
>>> add_integer(100.3, -5)
95

# Testing when b is not given. by default b=98.
# If only one argument is provided, b is assumed to be 98
>>> add_integer(10)
108

# Testing adding integers and strings.
>>> add_integer(4, "School")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer("school", 9)
Traceback (most recent call last):
...
TypeError: a must be an integer

# Testing None as the argument.
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(2.3, None)
Traceback (most recent call last):
    ...
TypeError: b must be an integer

# Testing very large integers
>>> add_integer(1000000000000, 2000000000000)
3000000000000
>>> add_integer(-1000000000000, 2000000000000)
1000000000000

# Testing adding zero to an integer and vise-versa
>>> add_integer(0, 10)
10
>>> add_integer(10, 0)
10

# Testing adding zeros
>>> add_integer(0, 0)
0

# Test adding negative floats
>>> add_integer(-10.5, -2.5)
-12
>>> add_integer(-10.5, -2)
-12

>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(2000e1000, 1000e9990)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer


>>> add_integer(float('NaN'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
